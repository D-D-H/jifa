/********************************************************************************
 * Copyright (c) 2020 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 ********************************************************************************/
allprojects {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'idea'
    version = '1.0'
}

task deleteSSHConfig(type: Delete) {
    delete "${project.rootDir}/backend/config/jifa-ssh-key", "${project.rootDir}/backend/config/jifa-ssh-key.pub"
}

task generateSSHConfig(dependsOn: deleteSSHConfig, type: Exec) {
    commandLine "ssh-keygen", "-b", "2048", "-t", "rsa", "-f", "${project.rootDir}/backend/config/jifa-ssh-key", "-q", "-N", "\"\""
}

task copySSHConfig(dependsOn: generateSSHConfig, type: Copy) {
    from "${project.rootDir}/backend/config/jifa-ssh-key" as Object,
            "${project.rootDir}/backend/config/jifa-ssh-key.pub" as Object
    into "${project.rootDir}/deploy/config" as Object
}

task copyMasterDist(type: Copy, dependsOn: ':backend:master:build') {
    from "${project.rootDir}/backend/master/build/distributions/master-1.0.zip" as Object
    into "${project.rootDir}/deploy" as Object
}

task copyWorkerDist(type: Copy, dependsOn: ':backend:worker:build') {
    from "${project.rootDir}/backend/worker/build/distributions/worker-1.0.zip" as Object
    into "${project.rootDir}/deploy" as Object
}

task compressFrontendDist(type: Zip) {
    from "${project.rootDir}/frontend/build"
    destinationDir file("${project.rootDir}/deploy")
    baseName 'frontend'
    version '1.0'
    extension 'zip'
}

task buildWorker {
    doFirst {
        ant.replaceregexp(match:'workerOnly.*?,', replace:'workerOnly:true,', flags:'g', byline:true) {
            fileset(dir: "${project.rootDir}/frontend/src", includes: 'config.js')
        }
    }
    dependsOn ':frontend:build'
    dependsOn ':backend:common:build'
    dependsOn ':backend:worker:build'
    dependsOn copySSHConfig, copyWorkerDist, compressFrontendDist
}

task buildJifa{
    dependsOn ':frontend:build'
    dependsOn ':backend:common:build'
    dependsOn ':backend:master:build'
    dependsOn ':backend:worker:build'
    dependsOn copySSHConfig, copyMasterDist, copyWorkerDist, compressFrontendDist
}

defaultTasks 'buildJifa'
